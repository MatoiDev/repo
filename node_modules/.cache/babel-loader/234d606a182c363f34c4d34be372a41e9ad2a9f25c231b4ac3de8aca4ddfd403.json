{"ast":null,"code":"import _objectSpread from \"/Users/worm/Desktop/repo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/worm/Desktop/repo/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"buttons\"];\nimport { f, b } from './chunk-FJBXZ5B2.js';\nimport { useMemo, useCallback, useSyncExternalStore } from 'react';\nimport { jsxs, jsx } from 'react/jsx-runtime';\nfunction l(s) {\n  var i = f(),\n    e = useCallback(function () {\n      return s(i.getState());\n    }, [s, i]);\n  return useSyncExternalStore(function (o) {\n    return i.state.subscribe(o);\n  }, e);\n}\nvar h = [\"play\", \"stop\", \"loop\"],\n  k = function k(_ref) {\n    var _ref$buttons = _ref.buttons,\n      s = _ref$buttons === void 0 ? h : _ref$buttons,\n      i = _objectWithoutProperties(_ref, _excluded);\n    var e = f(),\n      c = l(function (a) {\n        return a.loop;\n      }),\n      o = l(function (a) {\n        return a.currentState;\n      }),\n      p = l(function (a) {\n        return a.seeker;\n      }),\n      d = useMemo(function () {\n        return o === b.Playing;\n      }, [o]),\n      v = useMemo(function () {\n        return o === b.Paused;\n      }, [o]),\n      b$1 = useMemo(function () {\n        return o === b.Stopped;\n      }, [o]);\n    return jsxs(\"div\", _objectSpread(_objectSpread({\n      \"aria-label\": \"lottie-animation-controls\",\n      className: \"toolbar\"\n    }, i), {}, {\n      children: [s.includes(\"play\") && jsx(\"button\", {\n        onClick: function onClick() {\n          return e.togglePlay();\n        },\n        className: \"\".concat(d || v ? \"active\" : \"\"),\n        style: {\n          alignItems: \"center\"\n        },\n        \"aria-label\": \"play-pause\",\n        children: d ? jsx(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          \"aria-hidden\": \"true\",\n          focusable: \"false\",\n          children: jsx(\"path\", {\n            d: \"M14.016 5.016H18v13.969h-3.984V5.016zM6 18.984V5.015h3.984v13.969H6z\"\n          })\n        }) : jsx(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          \"aria-hidden\": \"true\",\n          focusable: \"false\",\n          children: jsx(\"path\", {\n            d: \"M8.016 5.016L18.985 12 8.016 18.984V5.015z\"\n          })\n        })\n      }), s.includes(\"stop\") && jsx(\"button\", {\n        onClick: function onClick() {\n          return e.stop();\n        },\n        className: \"\".concat(b$1 ? \"active\" : \"\"),\n        style: {\n          alignItems: \"center\"\n        },\n        \"aria-label\": \"stop\",\n        children: jsx(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          \"aria-hidden\": \"true\",\n          focusable: \"false\",\n          children: jsx(\"path\", {\n            d: \"M6 6h12v12H6V6z\"\n          })\n        })\n      }), jsx(\"input\", {\n        className: \"seeker\",\n        type: \"range\",\n        min: 0,\n        step: 0,\n        max: 100,\n        value: p || 0,\n        onInput: function onInput(a) {\n          return e.seek(String(a.currentTarget.value).concat(\"%\"));\n        },\n        onMouseDown: function onMouseDown() {\n          e.freeze();\n        },\n        onMouseUp: function onMouseUp() {\n          e.unfreeze();\n        },\n        \"aria-valuemin\": 1,\n        \"aria-valuemax\": 100,\n        role: \"slider\",\n        \"aria-valuenow\": p,\n        \"aria-label\": \"lottie-seek-input\"\n      }), s.includes(\"loop\") && jsx(\"button\", {\n        onClick: function onClick() {\n          e.toggleLoop();\n        },\n        className: c ? \"active\" : \"\",\n        style: {\n          alignItems: \"center\"\n        },\n        \"aria-label\": \"loop-toggle\",\n        children: jsx(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          \"aria-hidden\": \"true\",\n          focusable: \"false\",\n          children: jsx(\"path\", {\n            d: \"M17.016 17.016v-4.031h1.969v6h-12v3l-3.984-3.984 3.984-3.984v3h10.031zM6.984 6.984v4.031H5.015v-6h12v-3l3.984 3.984-3.984 3.984v-3H6.984z\"\n          })\n        })\n      })]\n    }));\n  };\nexport { k as a };\n//# sourceMappingURL=out.js.map","map":{"version":3,"names":[],"sources":["/Users/worm/Desktop/repo/node_modules/@dotlottie/react-player/src/controls.tsx","/Users/worm/Desktop/repo/node_modules/@dotlottie/react-player/src/hooks/use-dotlottie-state.ts"],"sourcesContent":["/**\n * Copyright 2023 Design Barn Inc.\n */\n\nimport { PlayerState } from '@dotlottie/common';\nimport React, { useMemo } from 'react';\n\nimport { useDotLottieState } from './hooks/use-dotlottie-state';\nimport { useDotLottieContext } from './providers';\n\nconst AVAILABLE_BUTTONS = ['play', 'stop', 'loop'] as const;\n\ninterface ControlsProps extends React.HTMLAttributes<HTMLDivElement> {\n  buttons?: Array<typeof AVAILABLE_BUTTONS[number]>;\n  show?: boolean;\n}\n\nexport const Controls: React.FC<ControlsProps> = ({ buttons = AVAILABLE_BUTTONS, ...props }) => {\n  const dotLottiePlayer = useDotLottieContext();\n\n  const loop = useDotLottieState((state) => state.loop);\n  const currentState = useDotLottieState((state) => state.currentState);\n  const seeker = useDotLottieState((state) => state.seeker);\n\n  const isPlaying = useMemo(() => {\n    return currentState === PlayerState.Playing;\n  }, [currentState]);\n\n  const isPaused = useMemo(() => {\n    return currentState === PlayerState.Paused;\n  }, [currentState]);\n\n  const isStopped = useMemo(() => {\n    return currentState === PlayerState.Stopped;\n  }, [currentState]);\n\n  return (\n    <div aria-label=\"lottie-animation-controls\" className=\"toolbar\" {...props}>\n      {buttons.includes('play') && (\n        <button\n          onClick={(): void => dotLottiePlayer.togglePlay()}\n          className={`${isPlaying || isPaused ? 'active' : ''}`}\n          style={{ alignItems: 'center' }}\n          // tabindex={0}\n          aria-label=\"play-pause\"\n        >\n          {isPlaying ? (\n            <svg width=\"24\" height=\"24\" aria-hidden=\"true\" focusable=\"false\">\n              <path d=\"M14.016 5.016H18v13.969h-3.984V5.016zM6 18.984V5.015h3.984v13.969H6z\" />\n            </svg>\n          ) : (\n            <svg width=\"24\" height=\"24\" aria-hidden=\"true\" focusable=\"false\">\n              <path d=\"M8.016 5.016L18.985 12 8.016 18.984V5.015z\" />\n            </svg>\n          )}\n        </button>\n      )}\n      {buttons.includes('stop') && (\n        <button\n          onClick={(): void => dotLottiePlayer.stop()}\n          className={`${isStopped ? 'active' : ''}`}\n          style={{ alignItems: 'center' }}\n          aria-label=\"stop\"\n        >\n          <svg width=\"24\" height=\"24\" aria-hidden=\"true\" focusable=\"false\">\n            <path d=\"M6 6h12v12H6V6z\" />\n          </svg>\n        </button>\n      )}\n      <input\n        className=\"seeker\"\n        type=\"range\"\n        min={0}\n        step={0}\n        max={100}\n        value={seeker || 0}\n        onInput={(event): void => dotLottiePlayer.seek(String(event.currentTarget.value).concat('%'))}\n        onMouseDown={(): void => {\n          dotLottiePlayer.freeze();\n        }}\n        onMouseUp={(): void => {\n          dotLottiePlayer.unfreeze();\n        }}\n        aria-valuemin={1}\n        aria-valuemax={100}\n        role=\"slider\"\n        aria-valuenow={seeker}\n        aria-label=\"lottie-seek-input\"\n      />\n\n      {buttons.includes('loop') && (\n        <button\n          onClick={(): void => {\n            dotLottiePlayer.toggleLoop();\n          }}\n          className={loop ? 'active' : ''}\n          style={{ alignItems: 'center' }}\n          aria-label=\"loop-toggle\"\n        >\n          <svg width=\"24\" height=\"24\" aria-hidden=\"true\" focusable=\"false\">\n            <path d=\"M17.016 17.016v-4.031h1.969v6h-12v3l-3.984-3.984 3.984-3.984v3h10.031zM6.984 6.984v4.031H5.015v-6h12v-3l3.984 3.984-3.984 3.984v-3H6.984z\" />\n          </svg>\n        </button>\n      )}\n    </div>\n  );\n};\n","/**\n * Copyright 2023 Design Barn Inc.\n */\n\nimport type { DotLottiePlayerState } from '@dotlottie/common';\nimport { useCallback, useSyncExternalStore } from 'react';\n\nimport { useDotLottieContext } from '../providers';\n\nexport type Unsubscribe = () => void;\nexport type Subscribe = (onStateChange: () => void) => Unsubscribe;\n\nexport function useDotLottieState<T>(selector: (state: DotLottiePlayerState) => T): T {\n  const dotlottiePlayer = useDotLottieContext();\n\n  const getSelection = useCallback(() => {\n    return selector(dotlottiePlayer.getState());\n  }, [selector, dotlottiePlayer]);\n\n  const subscribe: Subscribe = (listener: () => void) => {\n    return dotlottiePlayer.state.subscribe(listener);\n  };\n\n  return useSyncExternalStore(subscribe, getSelection);\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}