{"ast":null,"code":"import _objectSpread from \"/Users/worm/Desktop/repo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/worm/Desktop/repo/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _regeneratorRuntime from \"/Users/worm/Desktop/repo/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/worm/Desktop/repo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/worm/Desktop/repo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"onEvent\", \"activeAnimationId\", \"autoplay\", \"background\", \"direction\", \"intermission\", \"loop\", \"playMode\", \"hover\", \"speed\", \"renderer\", \"rendererSettings\", \"lottieRef\", \"src\", \"className\", \"testId\", \"children\", \"defaultTheme\"];\nimport { a, b, e, d } from './chunk-FJBXZ5B2.js';\nimport { useRef, useEffect, useState, useCallback, useImperativeHandle, useSyncExternalStore } from 'react';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nvar S = {\n  name: \"@dotlottie/react-player\",\n  version: \"1.0.0\",\n  type: \"module\",\n  description: \"dotlottie animation player react component.\",\n  repository: \"https://github.com/dotlottie/player-component.git\",\n  homepage: \"https://dotlottie.com/players\",\n  bugs: \"https://github.com/dotlottie/player-component/issues\",\n  author: \"Afsal <afsal@lottiefiles.com>\",\n  license: \"MIT\",\n  module: \"dist/index.js\",\n  types: \"dist/index.d.ts\",\n  files: [\"dist\"],\n  keywords: [\"dotlottie\", \"animation\", \"react\", \"component\", \"player\"],\n  scripts: {\n    build: \"tsup\",\n    \"cypress:open\": \"cypress open --component\",\n    dev: \"tsup --watch\",\n    lint: \"eslint .\",\n    test: \"cypress run --component\",\n    \"type-check\": \"tsc --noEmit\"\n  },\n  peerDependencies: {\n    react: \"^18.2.0\"\n  },\n  devDependencies: {\n    \"@dotlottie/common\": \"workspace:^\",\n    \"@lottiefiles/lottie-types\": \"^1.2.0\",\n    \"@types/react\": \"^18.0.31\",\n    \"@vitejs/plugin-react\": \"^3.1.0\",\n    autoprefixer: \"^10.4.14\",\n    cypress: \"^12.11.0\",\n    postcss: \"^8.4.24\",\n    react: \"^18.2.0\",\n    \"react-dom\": \"^18.2.0\",\n    tsup: \"^6.1.3\",\n    typescript: \"^4.7.4\",\n    vite: \"^4.2.1\"\n  }\n};\nvar R = function R(i, s, a) {\n  var _useState = useState(function () {\n      return new d(i, s.current, a);\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    o = _useState2[0],\n    l = _useState2[1],\n    c = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var d$1;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            d$1 = new d(i, s.current, a);\n            return _context.abrupt(\"return\", (d$1.load(), d$1));\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })), [s]);\n  return a !== null && a !== void 0 && a.lottieRef && useImperativeHandle(a.lottieRef, function () {\n    return {\n      play: function play(t, u) {\n        o.play(t, u);\n      },\n      previous: function previous(t) {\n        o.previous(t);\n      },\n      next: function next(t) {\n        o.next(t);\n      },\n      reset: function reset() {\n        o.reset();\n      },\n      getManifest: function getManifest() {\n        return o.getManifest();\n      },\n      getState: function getState() {\n        return o.getState();\n      },\n      getCurrentAnimationId: function getCurrentAnimationId() {\n        return o.currentAnimationId;\n      },\n      getLottie: function getLottie() {\n        return o.getAnimationInstance();\n      },\n      getVersions: function getVersions() {\n        return {\n          lottieWebVersion: d.getLottieWebVersion(),\n          dotLottieReactVersion: \"\".concat(S.version)\n        };\n      },\n      setDefaultTheme: function setDefaultTheme(t) {\n        o.setDefaultTheme(t);\n      },\n      setBackground: function setBackground(t) {\n        o.setBackground(t);\n      },\n      setAutoplay: function setAutoplay(t) {\n        o.setAutoplay(t);\n      },\n      setDirection: function setDirection(t) {\n        o.setDirection(t);\n      },\n      setHover: function setHover(t) {\n        o.setHover(t);\n      },\n      setIntermission: function setIntermission(t) {\n        o.setIntermission(t);\n      },\n      setLoop: function setLoop(t) {\n        o.setLoop(t);\n      },\n      setPlayMode: function setPlayMode(t) {\n        o.setMode(t);\n      },\n      setSpeed: function setSpeed(t) {\n        o.setSpeed(t);\n      },\n      revertToManifestValues: function revertToManifestValues(t) {\n        o.revertToManifestValues(t);\n      }\n    };\n  }, [a.lottieRef.current, o]), useEffect(function () {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.t0 = l;\n            _context2.next = 3;\n            return c();\n          case 3:\n            _context2.t1 = _context2.sent;\n            return _context2.abrupt(\"return\", (0, _context2.t0)(_context2.t1));\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))(), function () {\n      o.destroy();\n    };\n  }, [c]), o;\n};\nfunction v(i, s) {\n  var a = useCallback(function () {\n    return s(i.getState());\n  }, [s, i]);\n  return useSyncExternalStore(function (l) {\n    return i.state.subscribe(l);\n  }, a);\n}\nvar oe = function oe(_ref3) {\n  var i = _ref3.onEvent,\n    s = _ref3.activeAnimationId,\n    a$1 = _ref3.autoplay,\n    _ref3$background = _ref3.background,\n    o = _ref3$background === void 0 ? \"transparent\" : _ref3$background,\n    l = _ref3.direction,\n    c = _ref3.intermission,\n    d = _ref3.loop,\n    t = _ref3.playMode,\n    u = _ref3.hover,\n    b$1 = _ref3.speed,\n    _ref3$renderer = _ref3.renderer,\n    T = _ref3$renderer === void 0 ? \"svg\" : _ref3$renderer,\n    _ref3$rendererSetting = _ref3.rendererSettings,\n    V = _ref3$rendererSetting === void 0 ? {} : _ref3$rendererSetting,\n    x = _ref3.lottieRef,\n    A = _ref3.src,\n    h = _ref3.className,\n    y = _ref3.testId,\n    g = _ref3.children,\n    m = _ref3.defaultTheme,\n    C = _objectWithoutProperties(_ref3, _excluded);\n  var D = useRef(null),\n    e$1 = R(A, D, {\n      lottieRef: x,\n      renderer: T,\n      activeAnimationId: s,\n      rendererSettings: _objectSpread({\n        clearCanvas: !0,\n        progressiveLoad: !1,\n        hideOnTransparent: !0\n      }, V),\n      hover: u,\n      loop: d,\n      direction: l,\n      speed: b$1,\n      intermission: c,\n      background: o,\n      playMode: t,\n      autoplay: u ? !1 : a$1,\n      testId: y,\n      defaultTheme: m\n    }),\n    k = v(e$1, function (f) {\n      return f.currentState;\n    }),\n    O = v(e$1, function (f) {\n      return f.frame;\n    }),\n    I = v(e$1, function (f) {\n      return f.seeker;\n    });\n  return useEffect(function () {\n    typeof d > \"u\" ? e$1.revertToManifestValues([\"loop\"]) : e$1.setLoop(d);\n  }, [d]), useEffect(function () {\n    typeof a$1 > \"u\" ? e$1.revertToManifestValues([\"autoplay\"]) : e$1.setAutoplay(a$1);\n  }, [a$1]), useEffect(function () {\n    typeof l > \"u\" ? e$1.revertToManifestValues([\"direction\"]) : e$1.setDirection(l);\n  }, [l]), useEffect(function () {\n    typeof b$1 > \"u\" ? e$1.revertToManifestValues([\"speed\"]) : e$1.setSpeed(b$1);\n  }, [b$1]), useEffect(function () {\n    typeof t > \"u\" ? e$1.revertToManifestValues([\"playMode\"]) : e$1.setMode(t);\n  }, [t]), useEffect(function () {\n    typeof u > \"u\" ? e$1.revertToManifestValues([\"hover\"]) : e$1.setHover(u);\n  }, [u]), useEffect(function () {\n    typeof o > \"u\" ? e$1.setBackground(\"transparent\") : e$1.setBackground(o);\n  }, [o]), useEffect(function () {\n    typeof c > \"u\" ? e$1.revertToManifestValues([\"intermission\"]) : e$1.setIntermission(c);\n  }, [c]), useEffect(function () {\n    typeof m > \"u\" || !m ? e$1.revertToManifestValues([\"defaultTheme\"]) : e$1.setDefaultTheme(m);\n  }, [m]), useEffect(function () {\n    s && e$1.play(s);\n  }, [s]), useEffect(function () {\n    return e$1.addEventListener(\"DOMLoaded\", function () {\n      i === null || i === void 0 ? void 0 : i(a.Ready);\n    }), e$1.addEventListener(\"data_ready\", function () {\n      i === null || i === void 0 ? void 0 : i(a.DataReady);\n    }), e$1.addEventListener(\"data_failed\", function () {\n      i === null || i === void 0 ? void 0 : i(a.DataFail);\n    }), e$1.addEventListener(\"complete\", function () {\n      e$1.currentState !== b.Playing && (i === null || i === void 0 ? void 0 : i(a.Complete));\n    }), e$1.addEventListener(\"loopComplete\", function () {\n      i === null || i === void 0 ? void 0 : i(a.LoopComplete);\n    }), function () {\n      e$1.destroy();\n    };\n  }, [e$1]), useEffect(function () {\n    switch (k) {\n      case b.Stopped:\n        i === null || i === void 0 ? void 0 : i(a.Stop);\n        break;\n      case b.Paused:\n        i === null || i === void 0 ? void 0 : i(a.Pause);\n        break;\n      case b.Playing:\n        i === null || i === void 0 ? void 0 : i(a.Play);\n        break;\n      case b.Frozen:\n        i === null || i === void 0 ? void 0 : i(a.Freeze);\n        break;\n      case b.Error:\n        i === null || i === void 0 ? void 0 : i(a.Error);\n        break;\n    }\n  }, [k]), useEffect(function () {\n    i === null || i === void 0 ? void 0 : i(a.Frame, {\n      frame: O,\n      seeker: I\n    });\n  }, [O]), jsx(e, {\n    value: e$1,\n    children: jsxs(\"div\", _objectSpread(_objectSpread(_objectSpread({\n      className: \"dotlottie-container main \".concat(g ? \"controls\" : \"\", \" \").concat(h),\n      lang: \"en\",\n      role: \"img\"\n    }, y && {\n      \"data-testid\": y\n    }), C), {}, {\n      children: [jsx(\"div\", _objectSpread(_objectSpread({\n        ref: D,\n        \"data-name\": \"my-anim\",\n        className: \"animation \".concat(g ? \"controls\" : \"\"),\n        style: {\n          position: \"relative\"\n        }\n      }, y && {\n        \"data-testid\": \"animation\"\n      }), {}, {\n        children: k === b.Error && jsx(\"div\", _objectSpread(_objectSpread({}, y && {\n          \"data-testid\": \"error\"\n        }), {}, {\n          className: \"error\",\n          children: \"\\u26A0\\uFE0F\"\n        }))\n      })), g]\n    }))\n  });\n};\nexport { oe as a };\n//# sourceMappingURL=out.js.map","map":{"version":3,"names":[],"sources":["/Users/worm/Desktop/repo/node_modules/@dotlottie/react-player/src/react-player.tsx","/Users/worm/Desktop/repo/node_modules/@dotlottie/react-player/src/hooks/use-dotlottie-player.ts","/Users/worm/Desktop/repo/node_modules/@dotlottie/react-player/package.json","/Users/worm/Desktop/repo/node_modules/@dotlottie/react-player/src/hooks/use-select-dotlottie-state.ts"],"sourcesContent":["/**\n * Copyright 2023 Design Barn Inc.\n */\n\nimport type { RendererSettings, PlayMode } from '@dotlottie/common';\nimport { PlayerState, PlayerEvents } from '@dotlottie/common';\nimport React, { useEffect, useRef } from 'react';\nimport type { MutableRefObject } from 'react';\n\nimport type { DotLottieRefProps } from './hooks/use-dotlottie-player';\nimport { useDotLottiePlayer } from './hooks/use-dotlottie-player';\nimport { useSelectDotLottieState } from './hooks/use-select-dotlottie-state';\nimport { DotLottieProvider } from './providers';\n\nexport interface DotLottiePlayerProps extends React.HTMLAttributes<HTMLDivElement> {\n  activeAnimationId?: string;\n  autoplay?: boolean;\n  background?: string;\n  className?: string;\n  defaultTheme?: string;\n  direction?: 1 | -1;\n  hover?: boolean;\n  intermission?: number;\n  loop?: number | boolean;\n  lottieRef?: MutableRefObject<DotLottieRefProps | undefined>;\n  onEvent?: <T extends PlayerEvents>(name: T, params?: unknown) => void;\n  playMode?: PlayMode;\n  renderer?: 'svg' | 'canvas' | 'html';\n  rendererSettings?: RendererSettings;\n  speed?: number;\n  src: Record<string, unknown> | string;\n  testId?: string;\n}\n\nexport const DotLottiePlayer: React.FC<DotLottiePlayerProps> = ({\n  onEvent,\n  activeAnimationId,\n  autoplay,\n  background = 'transparent',\n  direction,\n  intermission,\n  loop,\n  playMode,\n  hover,\n  speed,\n  renderer = 'svg',\n  rendererSettings = {},\n  lottieRef,\n  src,\n  className,\n  testId,\n  children,\n  defaultTheme,\n  ...props\n}) => {\n  const container = useRef(null);\n\n  const dotLottiePlayer = useDotLottiePlayer(src, container, {\n    lottieRef,\n    renderer,\n    activeAnimationId,\n    rendererSettings: {\n      clearCanvas: true,\n      progressiveLoad: false,\n      hideOnTransparent: true,\n      ...rendererSettings,\n    },\n    hover,\n    loop,\n    direction,\n    speed,\n    intermission,\n    background,\n    playMode,\n    autoplay: hover ? false : autoplay,\n    testId,\n    defaultTheme,\n  });\n\n  const currentState = useSelectDotLottieState(dotLottiePlayer, (state) => state.currentState);\n  const frame = useSelectDotLottieState(dotLottiePlayer, (state) => state.frame);\n  const seeker = useSelectDotLottieState(dotLottiePlayer, (state) => state.seeker);\n\n  /**\n   * Updating prop changes.\n   */\n  useEffect(() => {\n    if (typeof loop === 'undefined') {\n      dotLottiePlayer.revertToManifestValues(['loop']);\n    } else {\n      dotLottiePlayer.setLoop(loop);\n    }\n  }, [loop]);\n\n  useEffect(() => {\n    if (typeof autoplay === 'undefined') {\n      dotLottiePlayer.revertToManifestValues(['autoplay']);\n    } else {\n      dotLottiePlayer.setAutoplay(autoplay);\n    }\n  }, [autoplay]);\n\n  useEffect(() => {\n    if (typeof direction === 'undefined') {\n      dotLottiePlayer.revertToManifestValues(['direction']);\n    } else {\n      dotLottiePlayer.setDirection(direction);\n    }\n  }, [direction]);\n\n  useEffect(() => {\n    if (typeof speed === 'undefined') {\n      dotLottiePlayer.revertToManifestValues(['speed']);\n    } else {\n      dotLottiePlayer.setSpeed(speed);\n    }\n  }, [speed]);\n\n  useEffect(() => {\n    if (typeof playMode === 'undefined') {\n      dotLottiePlayer.revertToManifestValues(['playMode']);\n    } else {\n      dotLottiePlayer.setMode(playMode);\n    }\n  }, [playMode]);\n\n  useEffect(() => {\n    if (typeof hover === 'undefined') {\n      dotLottiePlayer.revertToManifestValues(['hover']);\n    } else {\n      dotLottiePlayer.setHover(hover);\n    }\n  }, [hover]);\n\n  useEffect(() => {\n    if (typeof background === 'undefined') {\n      dotLottiePlayer.setBackground('transparent');\n    } else {\n      dotLottiePlayer.setBackground(background);\n    }\n  }, [background]);\n\n  useEffect(() => {\n    if (typeof intermission === 'undefined') {\n      dotLottiePlayer.revertToManifestValues(['intermission']);\n    } else {\n      dotLottiePlayer.setIntermission(intermission);\n    }\n  }, [intermission]);\n\n  useEffect(() => {\n    if (typeof defaultTheme === 'undefined' || !defaultTheme) {\n      dotLottiePlayer.revertToManifestValues(['defaultTheme']);\n    } else {\n      dotLottiePlayer.setDefaultTheme(defaultTheme);\n    }\n  }, [defaultTheme]);\n\n  useEffect(() => {\n    if (activeAnimationId) {\n      dotLottiePlayer.play(activeAnimationId);\n    }\n  }, [activeAnimationId]);\n\n  /**\n   * Adding event listeners if dotLottiePlayer is available\n   */\n  useEffect(() => {\n    dotLottiePlayer.addEventListener('DOMLoaded', () => {\n      onEvent?.(PlayerEvents.Ready);\n    });\n\n    dotLottiePlayer.addEventListener('data_ready', () => {\n      onEvent?.(PlayerEvents.DataReady);\n    });\n\n    dotLottiePlayer.addEventListener('data_failed', () => {\n      onEvent?.(PlayerEvents.DataFail);\n    });\n\n    dotLottiePlayer.addEventListener('complete', () => {\n      if (dotLottiePlayer.currentState !== PlayerState.Playing) {\n        onEvent?.(PlayerEvents.Complete);\n      }\n    });\n\n    dotLottiePlayer.addEventListener('loopComplete', () => {\n      onEvent?.(PlayerEvents.LoopComplete);\n    });\n\n    return () => {\n      dotLottiePlayer.destroy();\n    };\n  }, [dotLottiePlayer]);\n\n  useEffect(() => {\n    switch (currentState) {\n      case PlayerState.Stopped:\n        onEvent?.(PlayerEvents.Stop);\n        break;\n\n      case PlayerState.Paused:\n        onEvent?.(PlayerEvents.Pause);\n        break;\n\n      case PlayerState.Playing:\n        onEvent?.(PlayerEvents.Play);\n        break;\n\n      case PlayerState.Frozen:\n        onEvent?.(PlayerEvents.Freeze);\n        break;\n\n      case PlayerState.Error:\n        onEvent?.(PlayerEvents.Error);\n        break;\n\n      default:\n        break;\n    }\n  }, [currentState]);\n\n  useEffect(() => {\n    onEvent?.(PlayerEvents.Frame, { frame, seeker });\n  }, [frame]);\n\n  return (\n    <DotLottieProvider value={dotLottiePlayer}>\n      <div\n        className={`dotlottie-container main ${children ? 'controls' : ''} ${className}`}\n        lang=\"en\"\n        role=\"img\"\n        {...(testId && {\n          'data-testid': testId,\n        })}\n        {...props}\n      >\n        <div\n          ref={container}\n          data-name=\"my-anim\"\n          className={`animation ${children ? 'controls' : ''}`}\n          style={{ position: 'relative' }}\n          {...(testId && {\n            'data-testid': `animation`,\n          })}\n        >\n          {currentState === PlayerState.Error && (\n            <div\n              {...(testId && {\n                'data-testid': `error`,\n              })}\n              className=\"error\"\n            >\n              ⚠️\n            </div>\n          )}\n        </div>\n        {children}\n      </div>\n    </DotLottieProvider>\n  );\n};\n","/**\n * Copyright 2023 Design Barn Inc.\n */\n\nimport type {\n  DotLottieConfig,\n  PlaybackOptions,\n  Manifest,\n  RendererType,\n  DotLottiePlayerState,\n  PlayMode,\n  AnimationDirection,\n  AnimationItem,\n} from '@dotlottie/common';\nimport { DotLottiePlayer } from '@dotlottie/common';\nimport type { MutableRefObject } from 'react';\nimport { useCallback, useEffect, useState, useImperativeHandle } from 'react';\n\nimport pkg from '../../package.json';\n\nexport interface DotLottieRefProps {\n  getCurrentAnimationId: () => string | undefined;\n  getLottie: () => AnimationItem | undefined;\n  getManifest: () => Manifest | undefined;\n  getState: () => DotLottiePlayerState;\n  getVersions: () => Versions;\n  next: (\n    getOptions?: (currPlaybackOptions?: PlaybackOptions, manifestPlaybackOptions?: PlaybackOptions) => PlaybackOptions,\n  ) => void;\n  play: (\n    indexOrId?: string | number,\n    getOptions?: (currPlaybackOptions?: PlaybackOptions, manifestPlaybackOptions?: PlaybackOptions) => PlaybackOptions,\n  ) => void;\n  previous: (\n    getOptions?: (currPlaybackOptions?: PlaybackOptions, manifestPlaybackOptions?: PlaybackOptions) => PlaybackOptions,\n  ) => void;\n  reset: () => void;\n  revertToManifestValues: (playbackKeys?: Array<keyof PlaybackOptions | 'activeAnimationId'>) => void;\n  setAutoplay: (autoplay: boolean) => void;\n  setBackground: (background: string) => void;\n  setDefaultTheme: (defaultTheme: string) => void;\n  setDirection: (direction: AnimationDirection) => void;\n  setHover: (hover: boolean) => void;\n  setIntermission: (intermission: number) => void;\n  setLoop: (loop: number | boolean) => void;\n  setPlayMode: (mode: PlayMode) => void;\n  setSpeed: (speed: number) => void;\n}\n\nexport interface Versions {\n  dotLottieReactVersion: string;\n  lottieWebVersion: string;\n}\n\nexport const useDotLottiePlayer = (\n  src: Record<string, unknown> | string,\n  container: MutableRefObject<HTMLDivElement | null>,\n  config?: DotLottieConfig<RendererType> & {\n    lottieRef?: MutableRefObject<DotLottieRefProps | undefined>;\n  },\n): DotLottiePlayer => {\n  const [dotLottiePlayer, setDotLottiePlayer] = useState<DotLottiePlayer>(() => {\n    return new DotLottiePlayer(src, container.current, config);\n  });\n\n  const getDotLottiePlayer = useCallback(async () => {\n    const dl = new DotLottiePlayer(src, container.current, config);\n\n    dl.load();\n\n    return dl;\n  }, [container]);\n\n  if (config?.lottieRef) {\n    useImperativeHandle(\n      config.lottieRef,\n      () => {\n        const exposedFunctions: DotLottieRefProps = {\n          play: (\n            indexOrId?: string | number,\n            getOptions?: (\n              currPlaybackOptions: PlaybackOptions,\n              manifestPlaybackOptions: PlaybackOptions,\n            ) => PlaybackOptions,\n          ): void => {\n            dotLottiePlayer.play(indexOrId, getOptions);\n          },\n          previous: (\n            getOptions?: (\n              currPlaybackOptions: PlaybackOptions,\n              manifestPlaybackOptions: PlaybackOptions,\n            ) => PlaybackOptions,\n          ): void => {\n            dotLottiePlayer.previous(getOptions);\n          },\n          next: (\n            getOptions?: (\n              currPlaybackOptions: PlaybackOptions,\n              manifestPlaybackOptions: PlaybackOptions,\n            ) => PlaybackOptions,\n          ): void => {\n            dotLottiePlayer.next(getOptions);\n          },\n          reset: (): void => {\n            dotLottiePlayer.reset();\n          },\n          getManifest: (): Manifest | undefined => {\n            return dotLottiePlayer.getManifest();\n          },\n          getState: (): DotLottiePlayerState => {\n            return dotLottiePlayer.getState();\n          },\n          getCurrentAnimationId: (): string | undefined => {\n            return dotLottiePlayer.currentAnimationId;\n          },\n          getLottie: (): AnimationItem | undefined => {\n            return dotLottiePlayer.getAnimationInstance();\n          },\n          getVersions: (): Versions => {\n            return {\n              lottieWebVersion: DotLottiePlayer.getLottieWebVersion(),\n              dotLottieReactVersion: `${pkg.version}`,\n            };\n          },\n          setDefaultTheme: (defaultTheme: string): void => {\n            dotLottiePlayer.setDefaultTheme(defaultTheme);\n          },\n          setBackground: (background: string): void => {\n            dotLottiePlayer.setBackground(background);\n          },\n          setAutoplay: (autoplay: boolean): void => {\n            dotLottiePlayer.setAutoplay(autoplay);\n          },\n          setDirection: (direction: AnimationDirection): void => {\n            dotLottiePlayer.setDirection(direction);\n          },\n          setHover: (hover: boolean): void => {\n            dotLottiePlayer.setHover(hover);\n          },\n          setIntermission: (intermission: number): void => {\n            dotLottiePlayer.setIntermission(intermission);\n          },\n          setLoop: (loop: number | boolean): void => {\n            dotLottiePlayer.setLoop(loop);\n          },\n          setPlayMode: (mode: PlayMode): void => {\n            dotLottiePlayer.setMode(mode);\n          },\n          setSpeed: (speed: number): void => {\n            dotLottiePlayer.setSpeed(speed);\n          },\n          revertToManifestValues: (playbackKeys?: Array<keyof PlaybackOptions | 'activeAnimationId'>) => {\n            dotLottiePlayer.revertToManifestValues(playbackKeys);\n          },\n        };\n\n        return exposedFunctions;\n      },\n      [config.lottieRef.current, dotLottiePlayer],\n    );\n  }\n\n  useEffect(() => {\n    (async (): Promise<void> => {\n      setDotLottiePlayer(await getDotLottiePlayer());\n    })();\n\n    return () => {\n      dotLottiePlayer.destroy();\n    };\n  }, [getDotLottiePlayer]);\n\n  return dotLottiePlayer;\n};\n","{\n  \"name\": \"@dotlottie/react-player\",\n  \"version\": \"1.0.0\",\n  \"type\": \"module\",\n  \"description\": \"dotlottie animation player react component.\",\n  \"repository\": \"https://github.com/dotlottie/player-component.git\",\n  \"homepage\": \"https://dotlottie.com/players\",\n  \"bugs\": \"https://github.com/dotlottie/player-component/issues\",\n  \"author\": \"Afsal <afsal@lottiefiles.com>\",\n  \"license\": \"MIT\",\n  \"module\": \"dist/index.js\",\n  \"types\": \"dist/index.d.ts\",\n  \"files\": [\n    \"dist\"\n  ],\n  \"keywords\": [\n    \"dotlottie\",\n    \"animation\",\n    \"react\",\n    \"component\",\n    \"player\"\n  ],\n  \"scripts\": {\n    \"build\": \"tsup\",\n    \"cypress:open\": \"cypress open --component\",\n    \"dev\": \"tsup --watch\",\n    \"lint\": \"eslint .\",\n    \"test\": \"cypress run --component\",\n    \"type-check\": \"tsc --noEmit\"\n  },\n  \"peerDependencies\": {\n    \"react\": \"^18.2.0\"\n  },\n  \"devDependencies\": {\n    \"@dotlottie/common\": \"workspace:^\",\n    \"@lottiefiles/lottie-types\": \"^1.2.0\",\n    \"@types/react\": \"^18.0.31\",\n    \"@vitejs/plugin-react\": \"^3.1.0\",\n    \"autoprefixer\": \"^10.4.14\",\n    \"cypress\": \"^12.11.0\",\n    \"postcss\": \"^8.4.24\",\n    \"react\": \"^18.2.0\",\n    \"react-dom\": \"^18.2.0\",\n    \"tsup\": \"^6.1.3\",\n    \"typescript\": \"^4.7.4\",\n    \"vite\": \"^4.2.1\"\n  }\n}\n","/**\n * Copyright 2023 Design Barn Inc.\n */\n\nimport type { DotLottiePlayer, DotLottiePlayerState } from '@dotlottie/common';\nimport { useCallback, useSyncExternalStore } from 'react';\n\nexport type Unsubscribe = () => void;\nexport type Subscribe = (onStateChange: () => void) => Unsubscribe;\n\nexport function useSelectDotLottieState<T>(\n  dotLottiePlayer: DotLottiePlayer,\n  selector: (state: DotLottiePlayerState) => T,\n): T {\n  const getSelection = useCallback(() => {\n    return selector(dotLottiePlayer.getState());\n  }, [selector, dotLottiePlayer]);\n\n  const subscribe: Subscribe = (listener: () => void) => {\n    return dotLottiePlayer.state.subscribe(listener);\n  };\n\n  return useSyncExternalStore(subscribe, getSelection);\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}